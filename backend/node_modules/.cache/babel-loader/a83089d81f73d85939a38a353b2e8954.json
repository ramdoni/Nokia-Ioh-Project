{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _propTypes = require('prop-types');\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _cellEventDelegater = require('./cell-event-delegater');\nvar _cellEventDelegater2 = _interopRequireDefault(_cellEventDelegater);\nvar _utils = require('./utils');\nvar _utils2 = _interopRequireDefault(_utils);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} /* eslint react/prop-types: 0 */\n\nvar Cell = function (_eventDelegater) {\n  _inherits(Cell, _eventDelegater);\n  function Cell(props) {\n    _classCallCheck(this, Cell);\n    var _this = _possibleConstructorReturn(this, (Cell.__proto__ || Object.getPrototypeOf(Cell)).call(this, props));\n    _this.createHandleEditingCell = function (originFunc) {\n      return function (e) {\n        var _this$props = _this.props,\n          onStart = _this$props.onStart,\n          rowIndex = _this$props.rowIndex,\n          columnIndex = _this$props.columnIndex,\n          clickToEdit = _this$props.clickToEdit,\n          dbclickToEdit = _this$props.dbclickToEdit;\n        if ((clickToEdit || dbclickToEdit) && _utils2.default.isFunction(originFunc)) {\n          originFunc(e);\n        }\n        if (onStart) {\n          onStart(rowIndex, columnIndex);\n        }\n      };\n    };\n    _this.createHandleEditingCell = _this.createHandleEditingCell.bind(_this);\n    return _this;\n  }\n  _createClass(Cell, [{\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps) {\n      var shouldUpdate = false;\n      if (nextProps.column.isDummyField) {\n        shouldUpdate = !_utils2.default.isEqual(this.props.row, nextProps.row);\n      } else {\n        shouldUpdate = _utils2.default.get(this.props.row, this.props.column.dataField) !== _utils2.default.get(nextProps.row, nextProps.column.dataField);\n      }\n      if (shouldUpdate) return true;\n\n      // if (nextProps.formatter)\n\n      shouldUpdate = (nextProps.column.formatter ? !_utils2.default.isEqual(this.props.row, nextProps.row) : false) || this.props.column.hidden !== nextProps.column.hidden || this.props.column.isDummyField !== nextProps.column.isDummyField || this.props.rowIndex !== nextProps.rowIndex || this.props.columnIndex !== nextProps.columnIndex || this.props.className !== nextProps.className || this.props.title !== nextProps.title || this.props.editable !== nextProps.editable || this.props.clickToEdit !== nextProps.clickToEdit || this.props.dbclickToEdit !== nextProps.dbclickToEdit || !_utils2.default.isEqual(this.props.style, nextProps.style) || !_utils2.default.isEqual(this.props.column.formatExtraData, nextProps.column.formatExtraData) || !_utils2.default.isEqual(this.props.column.events, nextProps.column.events) || !_utils2.default.isEqual(this.props.column.attrs, nextProps.column.attrs) || this.props.tabIndex !== nextProps.tabIndex;\n      return shouldUpdate;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n        row = _props.row,\n        rowIndex = _props.rowIndex,\n        column = _props.column,\n        columnIndex = _props.columnIndex,\n        onStart = _props.onStart,\n        editable = _props.editable,\n        clickToEdit = _props.clickToEdit,\n        dbclickToEdit = _props.dbclickToEdit,\n        rest = _objectWithoutProperties(_props, ['row', 'rowIndex', 'column', 'columnIndex', 'onStart', 'editable', 'clickToEdit', 'dbclickToEdit']);\n      var dataField = column.dataField,\n        formatter = column.formatter,\n        formatExtraData = column.formatExtraData;\n      var attrs = this.delegate(_extends({}, rest));\n      var content = column.isDummyField ? null : _utils2.default.get(row, dataField);\n      if (formatter) {\n        content = column.formatter(content, row, rowIndex, formatExtraData);\n      }\n      if (clickToEdit && editable) {\n        attrs.onClick = this.createHandleEditingCell(attrs.onClick);\n      } else if (dbclickToEdit && editable) {\n        attrs.onDoubleClick = this.createHandleEditingCell(attrs.onDoubleClick);\n      }\n      return _react2.default.createElement('td', attrs, typeof content === 'boolean' ? '' + content : content);\n    }\n  }]);\n  return Cell;\n}((0, _cellEventDelegater2.default)(_react.Component));\nCell.propTypes = {\n  row: _propTypes2.default.object.isRequired,\n  rowIndex: _propTypes2.default.number.isRequired,\n  column: _propTypes2.default.object.isRequired,\n  columnIndex: _propTypes2.default.number.isRequired\n};\nexports.default = Cell;","map":null,"metadata":{},"sourceType":"script"}